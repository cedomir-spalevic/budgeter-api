AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Budgeter API

Globals:
   Function:
      MemorySize: 128
      Runtime: nodejs14.x
      Environment:
         Variables:
            JWT_KEY: mYq3t6w9z$C&F)J@NcRfUjWnZr4u7x!A%D*G-KaPdSgVkYp2s5v8y/B?E(H+MbQe
            AWS_PLATFORM_APPLICATION_IOS: arn:aws:sns:us-east-1:075433893437:app/APNS/budgeter-ios
            AWS_SNS_TOPIC: arn:aws:sns:us-east-1:075433893437:Budgeter
            MONGO_CONNECTION_STRING: mongodb+srv://admin:seWi3TfBAbLxriEa@cluster0.vvc2o.mongodb.net/budgeter?retryWrites=true&w=majority

Resources:
   apiKeysCreate:
      Type: AWS::Serverless::Function
      Properties:
         CodeUri: dist/apiKeysCreate/index.js
         Handler: index.handler
         Events:
            apiKeysCreate:
               Type: Api
               Properties:
                  Path: /apikeys
                  Method: post
   apiKeysDelete:
      Type: AWS::Serverless::Function
      Properties:
         CodeUri: dist/apiKeysDelete/index.js
         Handler: index.handler
         Events:
            apiKeysDelete:
               Type: Api
               Properties:
                  Path: /apikeys/{apiKeyId}
                  Method: delete
   apiKeysGet:
      Type: AWS::Serverless::Function
      Properties:
         CodeUri: dist/apiKeysGet/index.js
         Handler: index.handler
         Events:
            apiKeysGet:
               Type: Api
               Properties:
                  Path: /apikeys
                  Method: get
   authChallenge:
      Type: AWS::Serverless::Function
      Properties:
         CodeUri: dist/authChallenge/index.js
         Handler: index.handler
         Events:
            authChallenge:
               Type: Api
               Properties:
                  Path: /auth/challenge
                  Method: post
   authChallengeConfirmation:
      Type: AWS::Serverless::Function
      Properties:
         CodeUri: dist/authChallengeConfirmation/index.js
         Handler: index.handler
         Events:
            authChallengeConfirmation:
               Type: Api
               Properties:
                  Path: /auth/challenge/{key}
                  Method: post
   authLogin:
      Type: AWS::Serverless::Function
      Properties:
         CodeUri: dist/authLogin
         Handler: index.handler
         Events:
            authLogin:
               Type: Api
               Properties:
                  Path: /auth/login
                  Method: post
   authRefresh:
      Type: AWS::Serverless::Function
      Properties:
         CodeUri: dist/authRefresh/index.js
         Handler: index.handler
         Events:
            authRefresh:
               Type: Api
               Properties:
                  Path: /auth/refresh
                  Method: post
   authRegister:
      Type: AWS::Serverless::Function
      Properties:
         CodeUri: dist/authRegister/index.js
         Handler: index.handler
         Events:
            authRegister:
               Type: Api
               Properties:
                  Path: /auth/register
                  Method: post
   batchClearTokens:
      Type: AWS::Serverless::Function
      Properties:
         CodeUri: dist/batchClearTokens/index.js
         Handler: index.handler
   batchIncomeNotifications:
      Type: AWS::Serverless::Function
      Properties:
         CodeUri: dist/batchIncomeNotifications/index.js
         Handler: index.handler
   batchPaymentNotifications:
      Type: AWS::Serverless::Function
      Properties:
         CodeUri: dist/batchPaymentNotifications/index.js
         Handler: index.handler
   budgetsGet:
      Type: AWS::Serverless::Function
      Properties:
         CodeUri: dist/budgetsGet/index.js
         Handler: index.handler
         Events:
            budgetsGet:
               Type: Api
               Properties:
                  Path: /budgets
                  Method: get
   incomesCreate:
      Type: AWS::Serverless::Function
      Properties:
         CodeUri: dist/incomesCreate/index.js
         Handler: index.handler
         Events:
            incomesCreate:
               Type: Api
               Properties:
                  Path: /incomes
                  Method: post
   incomesDelete:
      Type: AWS::Serverless::Function
      Properties:
         CodeUri: dist/incomesDelete/index.js
         Handler: index.handler
         Events:
            incomesDelete:
               Type: Api
               Properties:
                  Path: /incomes/{incomeId}
                  Method: delete
   incomesGet:
      Type: AWS::Serverless::Function
      Properties:
         CodeUri: dist/incomesGet/index.js
         Handler: index.handler
         Events:
            incomesGet:
               Type: Api
               Properties:
                  Path: /incomes
                  Method: get
   incomesUpdate:
      Type: AWS::Serverless::Function
      Properties:
         CodeUri: dist/incomesUpdate/index.js
         Handler: index.handler
         Events:
            incomesUpdate:
               Type: Api
               Properties:
                  Path: /incomes/{incomeId}
                  Method: patch
   meGet:
      Type: AWS::Serverless::Function
      Properties:
         CodeUri: dist/meGet/index.js
         Handler: index.handler
         Events:
            meGet:
               Type: Api
               Properties:
                  Path: /me
                  Method: get
   meRegisterDevice:
      Type: AWS::Serverless::Function
      Properties:
         CodeUri: dist/meRegisterDevice/index.js
         Handler: index.handler
         Events:
            meRegisterDevice:
               Type: Api
               Properties:
                  Path: /me/registerDevice
                  Method: post
   meResetPassword:
      Type: AWS::Serverless::Function
      Properties:
         CodeUri: dist/meResetPassword/index.js
         Handler: index.handler
         Events:
            meResetPassword:
               Type: Api
               Properties:
                  Path: /me/resetPassword/{key}
                  Method: post
   meUpdate:
      Type: AWS::Serverless::Function
      Properties:
         CodeUri: dist/meUpdate/index.js
         Handler: index.handler
         Events:
            meUpdate:
               Type: Api
               Properties:
                  Path: /me
                  Method: patch
   paymentsCreate:
      Type: AWS::Serverless::Function
      Properties:
         CodeUri: dist/paymentsCreate/index.js
         Handler: index.handler
         Events:
            paymentsCreate:
               Type: Api
               Properties:
                  Path: /payments
                  Method: post
   paymentsDelete:
      Type: AWS::Serverless::Function
      Properties:
         CodeUri: dist/paymentsDelete/index.js
         Handler: index.handler
         Events:
            paymentsDelete:
               Type: Api
               Properties:
                  Path: /payments/{paymentId}
                  Method: delete
   paymentsGet:
      Type: AWS::Serverless::Function
      Properties:
         CodeUri: dist/paymentsGet/index.js
         Handler: index.handler
         Events:
            paymentsGet:
               Type: Api
               Properties:
                  Path: /payments
                  Method: get
   paymentsUpdate:
      Type: AWS::Serverless::Function
      Properties:
         CodeUri: dist/paymentsUpdate/index.js
         Handler: index.handler
         Events:
            paymentsUpdate:
               Type: Api
               Properties:
                  Path: /payments/{paymentId}
                  Method: patch
   usersCreate:
      Type: AWS::Serverless::Function
      Properties:
         CodeUri: dist/usersCreate/index.js
         Handler: index.handler
         Events:
            usersCreate:
               Type: Api
               Properties:
                  Path: /users
                  Method: post
   usersDelete:
      Type: AWS::Serverless::Function
      Properties:
         CodeUri: dist/usersDelete/index.js
         Handler: index.handler
         Events:
            usersDelete:
               Type: Api
               Properties:
                  Path: /users/{userId}
                  Method: delete
   usersGet:
      Type: AWS::Serverless::Function
      Properties:
         CodeUri: dist/usersGet/index.js
         Handler: index.handler
         Events:
            usersGet:
               Type: Api
               Properties:
                  Path: /users
                  Method: get
   usersUpdate:
      Type: AWS::Serverless::Function
      Properties:
         CodeUri: dist/usersUpdate/index.js
         Handler: index.handler
         Events:
            usersUpdate:
               Type: Api
               Properties:
                  Path: /users/{userId}
                  Method: patch
   clearTokensJob:
      Type: AWS::Serverless::StateMachine
      Properties:
         Policies:
            - arn:aws:iam::075433893437:policy/BudgeterLambdaInvocation
         Logging:
            Destinations:
               - CloudWatchLogsLogGroup:
                    LogGroupArn: arn:aws:logs:us-east-1:075433893437:log-group:/aws/vendedlogs/states/budgeter-clear-tokens-Logs:*
            Level: ALL
         Events:
            dailyJob:
               Type: Schedule
               Properties:
                  Schedule: cron(0 15 * * ? *)
         Definition:
            Comment: Step function to clear any expired tokens
            StartAt: InvokeFunction
            States:
               InvokeFunction:
                  Type: Task
                  Resource: arn:aws:states:::lambda:invoke
                  Parameters:
                     FunctionName: !Ref batchClearTokens
                     Payload:
                        Input:
                           apiKey: budgeter/bc6e4807d09296d324dd353c9591d91de548d61c
                  End: true
   incomeNotificationsJob:
      Type: AWS::Serverless::StateMachine
      Properties:
         Policies:
            - arn:aws:iam::075433893437:policy/BudgeterLambdaInvocation
         Logging:
            Destinations:
               - CloudWatchLogsLogGroup:
                    LogGroupArn: arn:aws:logs:us-east-1:075433893437:log-group:/aws/vendedlogs/states/budgeter-income-notifications-Logs:*
            Level: ALL
         Events:
            dailyJob:
               Type: Schedule
               Properties:
                  Schedule: cron(0 15 * * ? *)
         Definition:
            Comment: Step function to send any income notifications
            StartAt: InvokeFunction
            States:
               InvokeFunction:
                  Type: Task
                  Resource: arn:aws:states:::lambda:invoke
                  Parameters:
                     FunctionName: !Ref batchPaymentNotifications
                     Payload:
                        Input:
                           apiKey: budgeter/bc6e4807d09296d324dd353c9591d91de548d61c
                  End: true
   paymentNotificationsJob:
      Type: AWS::Serverless::StateMachine
      Properties:
         Policies:
            - arn:aws:iam::075433893437:policy/BudgeterLambdaInvocation
         Logging:
            Destinations:
               - CloudWatchLogsLogGroup:
                    LogGroupArn: arn:aws:logs:us-east-1:075433893437:log-group:/aws/vendedlogs/states/budgeter-payment-notifications-Logs:*
            Level: ALL
         Events:
            dailyJob:
               Type: Schedule
               Properties:
                  Schedule: cron(0 15 * * ? *)
         Definition:
            Comment: Step function to send any payment notifications
            StartAt: InvokeFunction
            States:
               InvokeFunction:
                  Type: Task
                  Resource: arn:aws:states:::lambda:invoke
                  Parameters:
                     FunctionName: !Ref batchIncomeNotifications
                     Payload:
                        Input:
                           apiKey: budgeter/bc6e4807d09296d324dd353c9591d91de548d61c
                  End: true
