service: budgeter-api
app: budgeter-api
org: cedomirspalevic
frameworkVersion: '2.1'

provider:
  name: aws
  runtime: nodejs12.x
  stage: prod

  environment:
    FAUNADBKEY: ${env:FAUNADB_KEY}
    JWTKEY: ${env:JWT_KEY}

# For serverless-bundle to remove dead code
package:
  individually: true

functions:
  auth-register:
    handler: src/lambda/auth/register/index.handler
    events:
      - http:
          path: auth/register
          method: post
  auth-signin:
    handler: src/lambda/auth/signIn/index.handler
    events:
      - http:
          path: auth/signin
          method: post
  auth-verify:
    handler: src/lambda/auth/verify/index.handler
    events:
      - http:
          path: auth/verify
          method: post
  budget-payments-complete:
    handler: src/lambda/budgetPayments/complete/index.handler
    events:
      - http:
          path: budgets/{budgetId}/payments/{paymentId}/complete
          method: get
          request:
            parameters:
              paths:
                budgetId: true
                paymentId: true
  budget-payments-create:
    handler: src/lambda/budgetPayments/create/index.handler
    events:
      - http:
          path: budgets/{budgetId}/payments
          method: post
          request:
            parameters:
              paths:
                budgetId: true
  budget-payments-delete:
    handler: src/lambda/budgetPayments/delete/index.handler
    events:
      - http:
          path: budgets/{budgetId}/payments/{paymentId}
          method: delete
          request:
            parameters:
              paths:
                budgetId: true
                paymentId: true
  budget-payments-get-all:
    handler: src/lambda/budgetPayments/getAll/index.handler
    events:
      - http:
          path: budgets/{budgetId}/payments
          method: get
          request:
            parameters:
              paths:
                budgetId: true
  budget-payments-uncomplete:
    handler: src/lambda/budgetPayments/uncomplete/index.handler
    events:
      - http:
          path: budgets/{budgetId}/payments/{paymentId}/uncomplete
          method: get
          request:
            parameters:
              paths:
                budgetId: true
                paymentId: true
  budgets-create:
    handler: src/lambda/budgets/create/index.handler
    events:
      - http:
          path: budgets
          method: post
  budgets-get:
    handler: src/lambda/budgets/get/index.handler
    events:
      - http:
          path: budgets
          method: get
  budgets-update:
    handler: src/lambda/budgets/update/index.handler
    events:
      - http:
          path: budgets/{budgetId}
          method: patch
          request:
            parameters:
              paths:
                budgetId: true
  budgets-delete:
    handler: src/lambda/budgets/delete/index.handler
    events:
      - http:
          path: budgets/{budgetId}
          method: delete
          request:
            parameters:
              paths:
                budgetId: true
  payments-create:
    handler: src/lambda/payments/create/index.handler
    events:
      - http:
          path: payments
          method: post
  payments-get:
    handler: src/lambda/payments/get/index.handler
    events:
      - http:
          path: payments
          method: get
  payments-update:
    handler: src/lambda/payments/update/index.handler
    events:
      - http:
          path: payments/{paymentId}
          method: patch
          request:
            parameters:
              paths:
                paymentId: true
  payments-delete:
    handler: src/lambda/payments/delete/index.handler
    events:
      - http:
          path: payments/{paymentId}
          method: delete
          request:
            parameters:
              paths:
                paymentId: true
  users-get:
    handler: src/lambda/users/get/index.handler
    events:
      - http:
          path: users
          method: get
  users-update:
    handler: src/lambda/users/update/index.handler
    events:
      - http:
          path: users/{userId}
          method: patch
          request:
            parameters:
              paths:
                userId: true
  users-delete:
    handler: src/lambda/users/delete/index.handler
    events:
      - http:
          path: users/{userId}
          method: delete
          request:
            parameters:
              paths:
                userId: true
  me-register-device:
    handler: src/lambda/me/registerDevice/index.handler
    events:
      - http:
          path: me/registerDevice
          method: post

plugins:
  - '@serverless/safeguards-plugin'
  - 'serverless-bundle'
  - 'serverless-offline'
  - 'serverless-dotenv-plugin'

# Custom variables read from serverless-bundle
custom:
  serverless-offline:
    httpPort: 4000
    useChildProcesses: true
  bundle:
    sourcemaps: false